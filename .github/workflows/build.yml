name: 🛠️ Builds
on: [push, pull_request]

jobs:
  build-gdextension:
    name: Build GDExtension files for ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Linux
            platform: linux
            os: ubuntu-latest
            arch: x86_64
          - name: Windows
            platform: windows
            os: ubuntu-latest
            arch: x86_64
          - name: macOS
            platform: macos
            os: macos-latest
            arch: universal
    runs-on: ${{ matrix.os }}
    steps:
      - name: (Windows) Set up MinGW
        if: ${{ matrix.platform == 'windows' }}
        uses: egor-tensin/setup-mingw@v2

      - name: Set up Python
        uses: actions/setup-python@v5

      - name: (Linux) Set up Pulse Audio and ALSA
        if: ${{ matrix.platform == 'linux' }}
        shell: sh
        run: |
          sudo apt-get install libpulse-dev libasound2-dev

      - name: Set up SCons
        shell: sh
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons
          scons --version

      - name: Checkout project
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: (Windows) Prepare cross compilation
        if: ${{ matrix.platform == 'windows' }}
        shell: sh
        run: |
          echo "OS=Windows_NT" >> $GITHUB_ENV

      - name: Compile libsm64
        shell: sh
        run: |
          cd extension/libsm64
          cc --version
          make -j $(nproc 2>/dev/null || sysctl -n hw.ncpu)
          cd ../..
          mkdir -p addons/libsm64-godot/extension/bin
          cp extension/libsm64/dist/* addons/libsm64-godot/extension/bin/ | true

      - name: Compile extension
        shell: sh
        run: |
          cd extension
          scons target=template_debug platform=${{ matrix.platform }} arch=${{ matrix.arch }} use_mingw=yes
          scons target=template_release platform=${{ matrix.platform }} arch=${{ matrix.arch }} use_mingw=yes
          cd ..

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-gdextension.${{ github.ref_name }}.${{ matrix.platform }}
          path: ${{ github.workspace }}/addons/libsm64-godot/extension/bin

  output-artifacts:
    name: Build the addon, project and export demo
    needs: build-gdextension
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Download GDExtension binaries
        uses: actions/download-artifact@v4
        with:
          pattern: ${{ github.event.repository.name }}-gdextension.${{ github.ref_name }}*
          path: ${{ github.workspace }}/addons/libsm64-godot/extension/bin
          merge-multiple: true

      - name: Copy extra files to addon
        shell: sh
        run: |
          cp -n '${{ github.workspace }}/LICENSE' '${{ github.workspace }}/addons/libsm64-godot/'

      - name: Clean extra files
        shell: sh
        run: |
          rm -rf extension
          rm -rf .git
          rm -rf .github
          rm -rf .vscode
          rm .git*

      - name: Upload demo project
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-project.${{ github.ref_name }}
          path: ${{ github.workspace }}

      - name: Upload addon folder
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-addon.${{ github.ref_name }}
          path: ${{ github.workspace }}/addons

      - name: Install Wine
        id: wine_install
        run: |
          sudo apt install wine64
          echo "WINE_PATH=$(which wine64)" >> $GITHUB_OUTPUT

      - name: Export demo
        id: demo_export
        uses: firebelley/godot-export@v6.0.0
        with:
          godot_executable_download_url: https://downloads.tuxfamily.org/godotengine/4.3/Godot_v4.3-stable_linux.x86_64.zip
          godot_export_templates_download_url: https://downloads.tuxfamily.org/godotengine/4.3/Godot_v4.3-stable_export_templates.tpz
          relative_project_path: ./
          archive_output: true
          cache: true
          wine_path: ${{ steps.wine_install.outputs.WINE_PATH }}

      - name: Upload Windows demo
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-demo.${{ github.ref_name }}.windows
          path: ${{ steps.demo_export.outputs.build_directory }}/Windows Desktop

      - name: Upload Linux demo
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-demo.${{ github.ref_name }}.linux
          path: ${{ steps.demo_export.outputs.build_directory }}/LinuxX11

      - name: Upload macOS demo
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-demo.${{ github.ref_name }}.macos
          path: ${{ steps.demo_export.outputs.build_directory }}/macOS

      - name: Rename archives
        run: |
          cd ${{ steps.demo_export.outputs.archive_directory }}
          mv "Windows Desktop.zip" "${{ github.event.repository.name }}-demo.${{ github.ref_name }}.windows.zip"
          mv "macOS.zip"           "${{ github.event.repository.name }}-demo.${{ github.ref_name }}.mac.zip"
          mv "LinuxX11.zip"        "${{ github.event.repository.name }}-demo.${{ github.ref_name }}.linux.zip"

      - name: Upload archives
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-demo.${{ github.ref_name }}
          path: ${{ steps.demo_export.outputs.archive_directory }}

      - name: Archive project and addon
        run: |
          cd ${{ github.workspace }}
          7z a -tzip ${{ github.event.repository.name }}-project.${{ github.ref_name }}.zip ${{ github.workspace }}
          7z a -tzip ${{ github.event.repository.name }}-addon.${{ github.ref_name }}.zip ${{ github.workspace }}/addons/libsm64-godot

      - name: Make release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ github.workspace }}/${{ github.event.repository.name }}-addon.${{ github.ref_name }}.zip
            ${{ github.workspace }}/${{ github.event.repository.name }}-project.${{ github.ref_name }}.zip
            ${{ steps.demo_export.outputs.archive_directory }}/*