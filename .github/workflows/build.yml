name: üõ†Ô∏è Builds
on:
  push:
  pull_request:
  workflow_dispatch:
#  push:
#    tags:
#      - 'v*.*.*'

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - identifier: linux-debug
            name: Linux Debug
            runner: ubuntu-latest
            target: debug
            platform: linux
            arch: x86_64
          - identifier: linux-release
            name: Linux Release
            runner: ubuntu-latest
            target: release
            platform: linux
            arch: x86_64
          - identifier: windows-debug
            name: Windows Debug
            runner: windows-latest
            target: debug
            platform: windows
            arch: x86_64
          - identifier: windows-release
            name: Windows Release
            runner: windows-latest
            target: release
            platform: windows
            arch: x86_64

    steps:
      - name: (Windows) Set up MinGW
        if: ${{ startsWith(matrix.identifier, 'windows-') }}
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: x64
          static: 0

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Set up SCons
        shell: sh
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons
          scons --version

      - name: Checkout project
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Compile libsm64
        shell: sh
        run: |
          cd extension/libsm64
          make -j`nproc`
          cd ../..
          mkdir -p addons/libsm64/extension/bin
          cp extension/libsm64/dist/* addons/libsm64/extension/bin/ | true

      - name: Compile extension
        shell: sh
        run: |
          cd extension
          scons target='${{ matrix.target }}' platform='${{ matrix.platform }}' arch='${{ matrix.arch }}' use_mingw=yes
          cd ..

      - name: (Windows) Copy mingw dlls
        if: ${{ startsWith(matrix.identifier, 'windows-') }}
        run: |
          cp /mingw64/bin/libgcc_s_seh-1.dll   addons/libsm64/extension/bin/
          cp /mingw64/bin/libstdc++-6.dll      addons/libsm64/extension/bin/
          cp /mingw64/bin/libwinpthread-1.dll  addons/libsm64/extension/bin/

      - name: Clean extension files
        shell: sh
        run: |
          rm -rf extension
          rm addons/libsm64/extension/bin/liblib*.a | true

      - name: Copy extra files to addon
        shell: sh
        run: |
          for addon in ${{ github.workspace }}/addons/libsm64/; do
            cp --no-clobber '${{ github.workspace }}/README.md' '${{ github.workspace }}/LICENSE' "$addon"
          done

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.repository.name }}
          path: |
            ${{ github.workspace }}/addons/libsm64